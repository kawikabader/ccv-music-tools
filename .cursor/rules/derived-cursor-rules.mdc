---
description: AI rules derived by SpecStory from the project AI interaction history
globs: *
---

## <headers/>

## TECH STACK

*   React.js for the UI framework
*   Tailwind CSS for styling
*   GitHub Pages for hosting
*   Vite
*   gh-pages
*   @testing-library/react
*   @testing-library/jest-dom
*   @testing-library/user-event
*   jest
*   jest-environment-jsdom
*   @types/jest
*   ts-jest
*   identity-obj-proxy

## PROJECT DOCUMENTATION & CONTEXT SYSTEM

## CODING STANDARDS

## DEBUGGING

## WORKFLOW & RELEASE RULES

## FILE NAMING & LOCATION

*   `src/App.tsx` - Main application component
*   `src/App.test.tsx` - Main application tests
*   `src/components/Auth/Login.tsx` - Login component
*   `src/components/Auth/Login.test.tsx` - Login component tests
*   `src/components/MusicianList/MusicianList.tsx` - Musician list and search component
*   `src/components/MusicianList/MusicianList.test.tsx` - Musician list tests
*   `src/components/Admin/AdminPanel.tsx` - Admin interface component
*   `src/components/Admin/AdminPanel.test.tsx` - Admin panel tests
*   `src/data/musicians.json` - Musician data storage
*   `src/data/users.json` - User data storage
*   `src/utils/auth.ts` - Authentication utilities
*   `src/utils/auth.test.ts` - Auth utilities tests
*   `src/utils/csv.ts` - CSV import/export utilities
*   `src/utils/csv.test.ts` - CSV utilities tests
*   `src/types/index.ts` - TypeScript type definitions
*   `tailwind.config.js` - Tailwind CSS configuration
*   `package.json` - Project dependencies
*   `tsconfig.json` - TypeScript configuration
*   `.github/workflows/deploy.yml` - GitHub Pages deployment workflow
*   `jest.config.js` - Jest configuration
*   `tsconfig.jest.json` - TypeScript config for Jest
*   `src/setupTests.ts` - Jest setup file
*   `test/__mocks__/fileMock.js` - Static asset mock for Jest

## TESTING

*   Unit tests should be placed alongside the code files they are testing
*   Use `npm test` to run all tests

## DEPLOYMENT

*   Use `npm run build` to create production build
*   Use `npm run deploy` to deploy to GitHub Pages

## NOTES

*   Unit tests should be placed alongside the code files they are testing
*   Use `npm test` to run all tests
*   Use `npm run build` to create production build
*   Use `npm run deploy` to deploy to GitHub Pages